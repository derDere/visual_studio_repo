<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Singelton Property</Title>
      <Author>github.com/derDere</Author>
      <Description>Creates a static C# property that has a private instance, MySelf, as its base. This instance is initialized uniquely in the shared new constructor and uses Newtonsoft Json Tools for storage.</Description>
      <Shortcut>jprop</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>PropertyName</ID>
          <ToolTip>Please replace with the desired property name.</ToolTip>
          <Default>MyProperty</Default>
        </Literal>
        <Literal>
          <ID>PropertyType</ID>
          <ToolTip>Please replace with the desired type of the variable.</ToolTip>
          <Default>Object</Default>
        </Literal>
        <Literal>
          <ID>PropertyDefaultValue</ID>
          <ToolTip>Please replace with the desired default value.</ToolTip>
          <Default>Nothing</Default>
        </Literal>
        <Literal>
          <ID>SingeltonInstance</ID>
          <ToolTip>Please replace with the name of the private instance.</ToolTip>
          <Default>MySelf</Default>
        </Literal>
        <Literal>
          <ID>Comment</ID>
          <ToolTip>Please enter property description.</ToolTip>
          <Default>...</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="method body"><![CDATA[[DebuggerBrowsable(DebuggerBrowsableState.Never)]
    [Newtonsoft.Json.JsonProperty("$PropertyName$")]
    private $PropertyType$ _$PropertyName$ = $PropertyDefaultValue$;
    /// <summary>
    /// $Comment$
    /// </summary>
    public static $PropertyType$ $PropertyName$ {
      get {
        return $SingeltonInstance$._$PropertyName$;
      }
      set {
        $SingeltonInstance$._$PropertyName$ = value;
      }
    }]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>
